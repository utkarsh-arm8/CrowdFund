import{cI as m,cJ as f,cK as y,cC as g,B as c,cL as O,cM as p,h as T,bL as o,aM as l,cN as U}from"./index-CBGS744k.js";async function h(a){const i=await p(a);return Object.keys(i).map(e=>{let t=i[e];return(typeof t!="string"||!t.startsWith("0x"))&&(t=T(t)),[e,t]}).reduce((e,t)=>{let[n,r]=t;return{...e,[n]:r}},{})}async function P(a,i,e){const t=await p(a),n={sender:t.sender,nonce:t.nonce,initCodeHash:o(t.initCode),callDataHash:o(t.callData),callGasLimit:t.callGasLimit,verificationGasLimit:t.verificationGasLimit,preVerificationGas:t.preVerificationGas,maxFeePerGas:t.maxFeePerGas,maxPriorityFeePerGas:t.maxPriorityFeePerGas,paymasterAndDataHash:o(t.paymasterAndData)},r={components:[{type:"address",name:"sender"},{type:"uint256",name:"nonce"},{type:"bytes32",name:"initCodeHash"},{type:"bytes32",name:"callDataHash"},{type:"uint256",name:"callGasLimit"},{type:"uint256",name:"verificationGasLimit"},{type:"uint256",name:"preVerificationGas"},{type:"uint256",name:"maxFeePerGas"},{type:"uint256",name:"maxPriorityFeePerGas"},{type:"bytes32",name:"paymasterAndDataHash"}],name:"hashedUserOp",type:"tuple"},s=l.encode([r],[{...n}]),d=o(s),u=l.encode(["bytes32","address","uint256"],[d,i,e]);return o(u)}const _=()=>{const a=BigInt(Math.floor(Math.random()*4294967296)),i=BigInt(Math.floor(Math.random()*4294967296)),e=BigInt(Math.floor(Math.random()*4294967296)),t=BigInt(Math.floor(Math.random()*4294967296)),n=BigInt(Math.floor(Math.random()*4294967296)),r=BigInt(Math.floor(Math.random()*4294967296));return a<<BigInt(160)|i<<BigInt(128)|e<<BigInt(96)|t<<BigInt(64)|n<<BigInt(32)|r},G=()=>{let a=_().toString(16);return a.length%2!==0&&(a="0"+a),a="0x"+a,c.from(U([a,"0x0000000000000000"]))};class w{constructor(i,e,t,n,r){this.bundlerUrl=i,this.entryPointAddress=e,this.chainId=t;const s={};if(m(this.bundlerUrl)){const d=typeof globalThis<"u"&&"APP_BUNDLE_ID"in globalThis?globalThis.APP_BUNDLE_ID:void 0;r?s["x-secret-key"]=r:n&&(s["x-client-id"]=n,d&&(s["x-bundle-id"]=d)),typeof globalThis<"u"&&"TW_AUTH_TOKEN"in globalThis&&typeof globalThis.TW_AUTH_TOKEN=="string"&&(s.authorization=`Bearer ${globalThis.TW_AUTH_TOKEN}`),typeof globalThis<"u"&&"TW_CLI_AUTH_TOKEN"in globalThis&&typeof globalThis.TW_CLI_AUTH_TOKEN=="string"&&(s.authorization=`Bearer ${globalThis.TW_CLI_AUTH_TOKEN}`,s["x-authorize-wallet"]="true"),f(s)}this.userOpJsonRpcProvider=new y({url:this.bundlerUrl,headers:s},{name:"Connected bundler network",chainId:t}),this.initializing=this.validateChainId()}async validateChainId(){if(await g(this.chainId))return;const i=await this.userOpJsonRpcProvider.send("eth_chainId",[]),e=parseInt(i);if(e!==this.chainId)throw new Error(`bundler ${this.bundlerUrl} is on chainId ${e}, but provider is on chainId ${this.chainId}`)}async sendUserOpToBundler(i){await this.initializing;const e=await h(i),t=[e,this.entryPointAddress];return await this.printUserOperation("eth_sendUserOperation",t),await this.userOpJsonRpcProvider.send("eth_sendUserOperation",[e,this.entryPointAddress])}async estimateUserOpGas(i){await this.initializing;const e=await h(i),t=[e,this.entryPointAddress];await this.printUserOperation("eth_estimateUserOperationGas",t);const n=await this.userOpJsonRpcProvider.send("eth_estimateUserOperationGas",[e,this.entryPointAddress]);return{preVerificationGas:c.from(n.preVerificationGas),verificationGas:c.from(n.verificationGas),verificationGasLimit:c.from(n.verificationGasLimit),callGasLimit:c.from(n.callGasLimit).add(O)}}async getUserOperationGasPrice(){return await this.initializing,await this.userOpJsonRpcProvider.send("thirdweb_getUserOperationGasPrice",[])}async getUserOperationReceipt(i){return await this.initializing,await this.userOpJsonRpcProvider.send("eth_getUserOperationReceipt",[i])}async zkPaymasterData(i){return await this.initializing,await this.userOpJsonRpcProvider.send("zk_paymasterData",[await h({...i,gas:i.gasLimit})])}async zkBroadcastTransaction(i){return await this.initializing,await this.userOpJsonRpcProvider.send("zk_broadcastTransaction",[i])}async printUserOperation(i,e){}}export{w as H,P as g,h,G as r};
