import __buffer_polyfill from 'vite-plugin-node-polyfills/shims/buffer'
globalThis.Buffer = globalThis.Buffer || __buffer_polyfill
import __global_polyfill from 'vite-plugin-node-polyfills/shims/global'
globalThis.global = globalThis.global || __global_polyfill
import __process_polyfill from 'vite-plugin-node-polyfills/shims/process'
globalThis.process = globalThis.process || __process_polyfill

import {
  getClientFetch,
  getThirdwebDomains
} from "./chunk-LMJC2RD2.js";
import "./chunk-IMPEKHNI.js";
import {
  require_dist,
  require_dist2,
  require_dist3
} from "./chunk-IIQ5PWPH.js";
import {
  __toESM
} from "./chunk-ZDA3XXE2.js";

// node_modules/@thirdweb-dev/sdk/node_modules/thirdweb/dist/esm/storage/upload/web-node.js
var import_dist = __toESM(require_dist(), 1);
var import_dist2 = __toESM(require_dist2(), 1);
var import_dist3 = __toESM(require_dist3(), 1);
async function uploadBatch(client, form, fileNames, options) {
  var _a;
  const headers = {};
  const res = await getClientFetch(client)(`https://${getThirdwebDomains().storage}/ipfs/upload`, {
    method: "POST",
    headers: {
      ...headers
      // ...form.getHeaders(),
    },
    body: form
  });
  if (!res.ok) {
    (_a = res.body) == null ? void 0 : _a.cancel();
    if (res.status === 401) {
      throw new Error("Unauthorized - You don't have permission to use this service.");
    }
    throw new Error(`Failed to upload files to IPFS - ${res.status} - ${res.statusText}`);
  }
  const body = await res.json();
  const cid = body.IpfsHash;
  if (!cid) {
    throw new Error("Failed to upload files to IPFS - Bad CID");
  }
  if (options == null ? void 0 : options.uploadWithoutDirectory) {
    return [`ipfs://${cid}`];
  }
  return fileNames.map((name) => `ipfs://${cid}/${name}`);
}
export {
  uploadBatch
};
//# sourceMappingURL=web-node-YLNCLTA5.js.map
