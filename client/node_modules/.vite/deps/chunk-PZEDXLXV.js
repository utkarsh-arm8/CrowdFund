import __buffer_polyfill from 'vite-plugin-node-polyfills/shims/buffer'
globalThis.Buffer = globalThis.Buffer || __buffer_polyfill
import __global_polyfill from 'vite-plugin-node-polyfills/shims/global'
globalThis.global = globalThis.global || __global_polyfill
import __process_polyfill from 'vite-plugin-node-polyfills/shims/process'
globalThis.process = globalThis.process || __process_polyfill

import {
  assertWindowEthereum
} from "./chunk-S7DKKX3R.js";
import {
  require_dist,
  require_dist2,
  require_dist3
} from "./chunk-IIQ5PWPH.js";
import {
  __toESM
} from "./chunk-ZDA3XXE2.js";

// node_modules/@thirdweb-dev/wallets/dist/getInjectedRainbowProvider-f52a988e.browser.esm.js
var import_dist = __toESM(require_dist());
var import_dist2 = __toESM(require_dist2());
var import_dist3 = __toESM(require_dist3());
function getInjectedRainbowProvider() {
  var _a;
  function getReady(ethereum) {
    const isRainbow = !!(ethereum == null ? void 0 : ethereum.isRainbow);
    if (!isRainbow) {
      return;
    }
    if (ethereum.isBraveWallet && !ethereum._events && !ethereum._state) {
      return;
    }
    if (ethereum.isPhantom) {
      return;
    }
    if (ethereum.isAvalanche) {
      return;
    }
    if (ethereum.isBitKeep) {
      return;
    }
    if (ethereum.isMathWallet) {
      return;
    }
    if (ethereum.isZerion) {
      return;
    }
    if (ethereum.isKuCoinWallet) {
      return;
    }
    if (ethereum.isPortal) {
      return;
    }
    if (ethereum.isTokenPocket) {
      return;
    }
    if (ethereum.isTokenary) {
      return;
    }
    return ethereum;
  }
  if (assertWindowEthereum(globalThis.window)) {
    if ((_a = globalThis.window.ethereum) == null ? void 0 : _a.providers) {
      return globalThis.window.ethereum.providers.find(getReady);
    }
    return getReady(globalThis.window.ethereum);
  }
}

export {
  getInjectedRainbowProvider
};
//# sourceMappingURL=chunk-PZEDXLXV.js.map
