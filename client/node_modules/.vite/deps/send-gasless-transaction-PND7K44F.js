import __buffer_polyfill from 'vite-plugin-node-polyfills/shims/buffer'
globalThis.Buffer = globalThis.Buffer || __buffer_polyfill
import __global_polyfill from 'vite-plugin-node-polyfills/shims/global'
globalThis.global = globalThis.global || __global_polyfill
import __process_polyfill from 'vite-plugin-node-polyfills/shims/process'
globalThis.process = globalThis.process || __process_polyfill

import {
  require_dist,
  require_dist2,
  require_dist3
} from "./chunk-IIQ5PWPH.js";
import {
  __toESM
} from "./chunk-ZDA3XXE2.js";

// node_modules/@thirdweb-dev/sdk/node_modules/thirdweb/dist/esm/transaction/actions/gasless/send-gasless-transaction.js
var import_dist = __toESM(require_dist(), 1);
var import_dist2 = __toESM(require_dist2(), 1);
var import_dist3 = __toESM(require_dist3(), 1);
async function sendGaslessTransaction({ account, transaction, serializableTransaction, gasless }) {
  if (serializableTransaction.value && serializableTransaction.value > 0n) {
    throw new Error("Gasless transactions cannot have a value");
  }
  if (gasless.provider === "biconomy") {
    const { relayBiconomyTransaction } = await import("./biconomy-OHOID3KW.js");
    return relayBiconomyTransaction({
      account,
      transaction,
      serializableTransaction,
      gasless
    });
  }
  if (gasless.provider === "openzeppelin") {
    const { relayOpenZeppelinTransaction } = await import("./openzeppelin-PCESR46F.js");
    return relayOpenZeppelinTransaction({
      account,
      transaction,
      serializableTransaction,
      gasless
    });
  }
  if (gasless.provider === "engine") {
    const { relayEngineTransaction } = await import("./engine-FQFL5TO5.js");
    return relayEngineTransaction({
      account,
      transaction,
      serializableTransaction,
      gasless
    });
  }
  throw new Error("Unsupported gasless provider");
}
export {
  sendGaslessTransaction
};
//# sourceMappingURL=send-gasless-transaction-PND7K44F.js.map
