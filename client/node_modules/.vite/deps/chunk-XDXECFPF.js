import __buffer_polyfill from 'vite-plugin-node-polyfills/shims/buffer'
globalThis.Buffer = globalThis.Buffer || __buffer_polyfill
import __global_polyfill from 'vite-plugin-node-polyfills/shims/global'
globalThis.global = globalThis.global || __global_polyfill
import __process_polyfill from 'vite-plugin-node-polyfills/shims/process'
globalThis.process = globalThis.process || __process_polyfill


// node_modules/@thirdweb-dev/contracts-js/dist/abis/TWMultichainRegistryLogic.json
var TWMultichainRegistryLogic_default = [
  {
    type: "function",
    name: "OPERATOR_ROLE",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32"
      }
    ],
    stateMutability: "view"
  },
  {
    type: "function",
    name: "_msgData",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes"
      }
    ],
    stateMutability: "view"
  },
  {
    type: "function",
    name: "_msgSender",
    inputs: [],
    outputs: [
      {
        name: "sender",
        type: "address",
        internalType: "address"
      }
    ],
    stateMutability: "view"
  },
  {
    type: "function",
    name: "add",
    inputs: [
      {
        name: "_deployer",
        type: "address",
        internalType: "address"
      },
      {
        name: "_deployment",
        type: "address",
        internalType: "address"
      },
      {
        name: "_chainId",
        type: "uint256",
        internalType: "uint256"
      },
      {
        name: "metadataUri",
        type: "string",
        internalType: "string"
      }
    ],
    outputs: [],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    name: "contractType",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32"
      }
    ],
    stateMutability: "pure"
  },
  {
    type: "function",
    name: "contractVersion",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "uint8"
      }
    ],
    stateMutability: "pure"
  },
  {
    type: "function",
    name: "count",
    inputs: [
      {
        name: "_deployer",
        type: "address",
        internalType: "address"
      }
    ],
    outputs: [
      {
        name: "deploymentCount",
        type: "uint256",
        internalType: "uint256"
      }
    ],
    stateMutability: "view"
  },
  {
    type: "function",
    name: "getAll",
    inputs: [
      {
        name: "_deployer",
        type: "address",
        internalType: "address"
      }
    ],
    outputs: [
      {
        name: "allDeployments",
        type: "tuple[]",
        internalType: "struct ITWMultichainRegistry.Deployment[]",
        components: [
          {
            name: "deploymentAddress",
            type: "address",
            internalType: "address"
          },
          {
            name: "chainId",
            type: "uint256",
            internalType: "uint256"
          },
          {
            name: "metadataURI",
            type: "string",
            internalType: "string"
          }
        ]
      }
    ],
    stateMutability: "view"
  },
  {
    type: "function",
    name: "getMetadataUri",
    inputs: [
      {
        name: "_chainId",
        type: "uint256",
        internalType: "uint256"
      },
      {
        name: "_deployment",
        type: "address",
        internalType: "address"
      }
    ],
    outputs: [
      {
        name: "metadataUri",
        type: "string",
        internalType: "string"
      }
    ],
    stateMutability: "view"
  },
  {
    type: "function",
    name: "remove",
    inputs: [
      {
        name: "_deployer",
        type: "address",
        internalType: "address"
      },
      {
        name: "_deployment",
        type: "address",
        internalType: "address"
      },
      {
        name: "_chainId",
        type: "uint256",
        internalType: "uint256"
      }
    ],
    outputs: [],
    stateMutability: "nonpayable"
  },
  {
    type: "event",
    name: "Added",
    inputs: [
      {
        name: "deployer",
        type: "address",
        indexed: true,
        internalType: "address"
      },
      {
        name: "deployment",
        type: "address",
        indexed: true,
        internalType: "address"
      },
      {
        name: "chainId",
        type: "uint256",
        indexed: true,
        internalType: "uint256"
      },
      {
        name: "metadataUri",
        type: "string",
        indexed: false,
        internalType: "string"
      }
    ],
    anonymous: false
  },
  {
    type: "event",
    name: "Deleted",
    inputs: [
      {
        name: "deployer",
        type: "address",
        indexed: true,
        internalType: "address"
      },
      {
        name: "deployment",
        type: "address",
        indexed: true,
        internalType: "address"
      },
      {
        name: "chainId",
        type: "uint256",
        indexed: true,
        internalType: "uint256"
      }
    ],
    anonymous: false
  }
];

export {
  TWMultichainRegistryLogic_default
};
//# sourceMappingURL=chunk-XDXECFPF.js.map
