{
  "version": 3,
  "sources": ["../../@thirdweb-dev/wallets/evm/connectors/imtoken/dist/thirdweb-dev-wallets-evm-connectors-imtoken.browser.esm.js"],
  "sourcesContent": ["import { InjectedConnector } from '../../injected/dist/thirdweb-dev-wallets-evm-connectors-injected.browser.esm.js';\nimport { a as assertWindowEthereum } from '../../../../dist/assertWindowEthereum-88295886.browser.esm.js';\nimport '../../../../dist/defineProperty-350fc508.browser.esm.js';\nimport '../../../../dist/WagmiConnector-2f14002d.browser.esm.js';\nimport '@thirdweb-dev/chains';\nimport 'eventemitter3';\nimport '../../../../dist/errors-9edc08c8.browser.esm.js';\nimport '../../../../dist/url-a45219bd.browser.esm.js';\nimport 'ethers';\nimport '../../../../dist/normalizeChainId-1fb9aedf.browser.esm.js';\n\nclass ImTokenConnector extends InjectedConnector {\n  constructor(arg) {\n    const defaultOptions = {\n      name: \"imToken\",\n      getProvider() {\n        function getReady(ethereum) {\n          const isImToken = !!ethereum?.isImToken;\n          if (!isImToken) {\n            return;\n          }\n          return ethereum;\n        }\n        if (assertWindowEthereum(globalThis.window)) {\n          if (globalThis.window.ethereum?.providers) {\n            return globalThis.window.ethereum.providers.find(getReady);\n          }\n          return getReady(globalThis.window.ethereum);\n        }\n      }\n    };\n    const options = {\n      ...defaultOptions,\n      ...arg.options\n    };\n    super({\n      chains: arg.chains,\n      options,\n      connectorStorage: arg.connectorStorage\n    });\n  }\n}\n\nexport { ImTokenConnector };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA,IAAAA,eAAA;AAAA,IAAAA,eAAA;AAQA;AAGA,IAAM,mBAAN,cAA+B,kBAAkB;AAAA,EAC/C,YAAY,KAAK;AACf,UAAM,iBAAiB;AAAA,MACrB,MAAM;AAAA,MACN,cAAc;AAfpB;AAgBQ,iBAAS,SAAS,UAAU;AAC1B,gBAAM,YAAY,CAAC,EAAC,qCAAU;AAC9B,cAAI,CAAC,WAAW;AACd;AAAA,UACF;AACA,iBAAO;AAAA,QACT;AACA,YAAI,qBAAqB,WAAW,MAAM,GAAG;AAC3C,eAAI,gBAAW,OAAO,aAAlB,mBAA4B,WAAW;AACzC,mBAAO,WAAW,OAAO,SAAS,UAAU,KAAK,QAAQ;AAAA,UAC3D;AACA,iBAAO,SAAS,WAAW,OAAO,QAAQ;AAAA,QAC5C;AAAA,MACF;AAAA,IACF;AACA,UAAM,UAAU;AAAA,MACd,GAAG;AAAA,MACH,GAAG,IAAI;AAAA,IACT;AACA,UAAM;AAAA,MACJ,QAAQ,IAAI;AAAA,MACZ;AAAA,MACA,kBAAkB,IAAI;AAAA,IACxB,CAAC;AAAA,EACH;AACF;",
  "names": ["import_dist"]
}
