import __buffer_polyfill from 'vite-plugin-node-polyfills/shims/buffer'
globalThis.Buffer = globalThis.Buffer || __buffer_polyfill
import __global_polyfill from 'vite-plugin-node-polyfills/shims/global'
globalThis.global = globalThis.global || __global_polyfill
import __process_polyfill from 'vite-plugin-node-polyfills/shims/process'
globalThis.process = globalThis.process || __process_polyfill

import {
  eventemitter3_default
} from "./chunk-C347233M.js";
import {
  defaultChains
} from "./chunk-OWJUH5G2.js";
import {
  require_dist,
  require_dist2,
  require_dist3
} from "./chunk-IIQ5PWPH.js";
import {
  __toESM
} from "./chunk-ZDA3XXE2.js";

// node_modules/@thirdweb-dev/wallets/dist/WagmiConnector-2f14002d.browser.esm.js
var import_dist = __toESM(require_dist());
var import_dist2 = __toESM(require_dist2());
var import_dist3 = __toESM(require_dist3());
var WagmiConnector = class extends eventemitter3_default {
  /** Unique connector id */
  /** Connector name */
  /** Chains connector supports */
  /** Options to use with connector */
  /** Whether connector is usable */
  constructor(_ref) {
    let {
      chains = defaultChains,
      options
    } = _ref;
    super();
    this.chains = chains;
    this.options = options;
  }
  getBlockExplorerUrls(chain) {
    var _a;
    const explorers = ((_a = chain.explorers) == null ? void 0 : _a.map((x) => x.url)) ?? [];
    return explorers.length > 0 ? explorers : void 0;
  }
  isChainUnsupported(chainId) {
    return !this.chains.some((x) => x.chainId === chainId);
  }
  updateChains(chains) {
    this.chains = chains;
  }
};

export {
  WagmiConnector
};
//# sourceMappingURL=chunk-SYPEQW6F.js.map
